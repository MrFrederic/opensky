services:
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/dropzone_db
      SECRET_KEY: your-secret-key-change-in-production
      ENVIRONMENT: development
      TELEGRAM_BOT_TOKEN: YOUR_TELEGRAM_BOT_TOKEN_HERE
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      ALGORITHM: HS256
      # MinIO configuration
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET_NAME: dropzone-files
      MINIO_SECURE: "false"
      # Public URL for file access (through nginx proxy)
      FILES_BASE_URL: http://localhost/files
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
  
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    environment:
      # Pass Telegram bot username directly to frontend
      # This is the same value used by the backend
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
    depends_on:
      - backend
      - minio

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: dropzone_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dropzone_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    expose:
      - "9000"   # S3 API - internal only
      - "9001"   # Web UI - internal only
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  pgadmin_data:
  minio_data:
