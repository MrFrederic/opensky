services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: dropzone_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dropzone_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/dropzone_db
      SECRET_KEY: your-secret-key-change-in-production
      ENVIRONMENT: development
      TELEGRAM_BOT_TOKEN: 7320649396:AAHlT6WpmwoPtZcvJSj5zBFoY9UiBFp0qo8
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      ALGORITHM: HS256
      # MinIO configuration
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET_NAME: dropzone-files
      MINIO_SECURE: "false"
      # Public URL for file access (through nginx proxy)
      FILES_BASE_URL: http://localhost/files
    # Remove external port exposure - only accessible through frontend proxy
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    expose:
      - "9000"   # S3 API - internal only
      - "9001"   # Web UI - internal only
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      args:
        - API_HOST=http://backend:8000
    environment:
      - VITE_API_HOST=http://backend:8000
    ports:
      - "80:80"
    depends_on:
      - backend
      - minio
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
  pgadmin_data:
  minio_data:
