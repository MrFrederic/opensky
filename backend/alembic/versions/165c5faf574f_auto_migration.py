"""auto_migration

Revision ID: 165c5faf574f
Revises: 5033949a58c5
Create Date: 2025-07-10 16:52:31.940551

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '165c5faf574f'
down_revision = '5033949a58c5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create userrole enum only if it doesn't exist
    userrole_enum = postgresql.ENUM('TANDEM_JUMPER', 'AFF_STUDENT', 'SPORT_PAID', 'SPORT_FREE', 'TANDEM_INSTRUCTOR', 'AFF_INSTRUCTOR', 'ADMINISTRATOR', name='userrole')
    
    # Check if enum exists before creating it
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT 1 FROM pg_type WHERE typname = 'userrole'"))
    if not result.fetchone():
        userrole_enum.create(connection)
    
    op.create_table('jump_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('exit_altitude', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jump_types_id'), 'jump_types', ['id'], unique=False)
    op.create_table('additional_staff',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jump_type_id', sa.Integer(), nullable=False),
    sa.Column('staff_required_role', sa.Enum('TANDEM_JUMPER', 'AFF_STUDENT', 'SPORT_PAID', 'SPORT_FREE', 'TANDEM_INSTRUCTOR', 'AFF_INSTRUCTOR', 'ADMINISTRATOR', name='userrole'), nullable=False),
    sa.Column('staff_default_jump_type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['jump_type_id'], ['jump_types.id'], ),
    sa.ForeignKeyConstraint(['staff_default_jump_type_id'], ['jump_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_additional_staff_id'), 'additional_staff', ['id'], unique=False)
    op.create_table('jump_type_allowed_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jump_type_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('TANDEM_JUMPER', 'AFF_STUDENT', 'SPORT_PAID', 'SPORT_FREE', 'TANDEM_INSTRUCTOR', 'AFF_INSTRUCTOR', 'ADMINISTRATOR', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['jump_type_id'], ['jump_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jump_type_id', 'role', name='uq_jump_type_role')
    )
    op.create_index(op.f('ix_jump_type_allowed_roles_id'), 'jump_type_allowed_roles', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jump_type_allowed_roles_id'), table_name='jump_type_allowed_roles')
    op.drop_table('jump_type_allowed_roles')
    op.drop_index(op.f('ix_additional_staff_id'), table_name='additional_staff')
    op.drop_table('additional_staff')
    op.drop_index(op.f('ix_jump_types_id'), table_name='jump_types')
    op.drop_table('jump_types')
    # ### end Alembic commands ###
